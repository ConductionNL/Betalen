openapi: 3.0.2
info:
  title: 'Betaal Service'
  version: V.0.1
  description: |
    API Details
    - Component: Betaal Service
    - Reference: bc
    - Enviroment: dev
    - Version: V.0.1
    - Repository: [online](https://github.com/ConductionNL/Proto-component-commonground) / [zip](https://github.com/ConductionNL/Proto-component-commonground/archive/master.zip)
    - Docker Image: [online](https://hub.docker.com/repository/docker/conduction/pc-php) 
    - Datamodel: [postman](/schema/bc.postman_collection.json) / [oas](/schema/openapi.yaml) / [pdf](/schema/datamodel.pdf) / [mwb](/schema/datamodel.mwb) 
    
    'Naast deze JSON rest API is er ook een [graphql](/graphql) interface beschikbaar.'         
    
paths:
  /invoice_items:
    get:
      tags:
        - InvoiceItem
      operationId: getInvoiceItemCollection
      summary: 'Retrieves the collection of InvoiceItem resources.'
      responses:
        200:
          description: 'InvoiceItem collection response'
          content:
            application/health+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExampleEntity-read'
            application/json+health:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ExampleEntity-read'
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceItem-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/InvoiceItem:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/json+ld:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/ExampleEntity:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceItem-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceItem-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceItem-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceItem-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceItem-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InvoiceItem-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - InvoiceItem
      operationId: postInvoiceItemCollection
      summary: 'Creates a InvoiceItem resource.'
      responses:
        201:
          description: 'InvoiceItem resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/InvoiceItem-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/InvoiceItem:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/InvoiceItem-read'
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceItem-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/InvoiceItem-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/InvoiceItem-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/InvoiceItem-read'
            text/html:
              schema:
                $ref: '#/components/schemas/InvoiceItem-read'
          links:
            GetInvoiceItemItem:
              parameters:
                id: '$response.body#/id'
              operationId: getInvoiceItemItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /invoice_items/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/InvoiceItem-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/InvoiceItem:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/InvoiceItem-write'
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceItem-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/InvoiceItem-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/InvoiceItem-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/InvoiceItem-write'
          text/html:
            schema:
              $ref: '#/components/schemas/InvoiceItem-write'
        description: 'The new InvoiceItem resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/invoice_items/{id}':
    get:
      tags:
        - InvoiceItem
      operationId: getInvoiceItemItem
      summary: 'Retrieves a InvoiceItem resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'InvoiceItem resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/InvoiceItem-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/InvoiceItem:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/InvoiceItem-read'
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceItem-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/InvoiceItem-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/InvoiceItem-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/InvoiceItem-read'
            text/html:
              schema:
                $ref: '#/components/schemas/InvoiceItem-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - InvoiceItem
      operationId: deleteInvoiceItemItem
      summary: 'Removes the InvoiceItem resource.'
      responses:
        204:
          description: 'InvoiceItem resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - InvoiceItem
      operationId: putInvoiceItemItem
      summary: 'Replaces the InvoiceItem resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'InvoiceItem resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/InvoiceItem-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/InvoiceItem:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/InvoiceItem-read'
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceItem-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/InvoiceItem-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/InvoiceItem-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/InvoiceItem-read'
            text/html:
              schema:
                $ref: '#/components/schemas/InvoiceItem-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/InvoiceItem-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/InvoiceItem:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/InvoiceItem-write'
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceItem-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/InvoiceItem-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/InvoiceItem-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/InvoiceItem-write'
          text/html:
            schema:
              $ref: '#/components/schemas/InvoiceItem-write'
        description: 'The updated InvoiceItem resource'
    patch:
      tags:
        - InvoiceItem
      operationId: patchInvoiceItemItem
      summary: 'Updates the InvoiceItem resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'InvoiceItem resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/InvoiceItem-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/InvoiceItem:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/InvoiceItem-read'
            application/json:
              schema:
                $ref: '#/components/schemas/InvoiceItem-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/InvoiceItem-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/InvoiceItem-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/InvoiceItem-read'
            text/html:
              schema:
                $ref: '#/components/schemas/InvoiceItem-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvoiceItem-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/InvoiceItem-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/InvoiceItem:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/InvoiceItem-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/InvoiceItem-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/InvoiceItem-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/InvoiceItem-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/InvoiceItem-write'
          text/html:
            schema:
              $ref: '#/components/schemas/InvoiceItem-write'
        description: 'The updated InvoiceItem resource'
  /invoices:
    get:
      tags:
        - Invoice
      operationId: getInvoiceCollection
      summary: 'Retrieves the collection of Invoice resources.'
      responses:
        200:
          description: 'Invoice collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Invoice-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Invoice:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Invoice-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Invoice-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Invoice-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Invoice-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Invoice-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Invoice-read'
      parameters:
        -
          name: reference
          in: query
          required: false
          schema:
            type: string
        -
          name: 'reference[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: targetOrganization
          in: query
          required: false
          schema:
            type: string
        -
          name: 'targetOrganization[]'
          in: query
          required: false
          schema:
            type: array
            items:
              type: string
          style: form
          explode: true
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Invoice
      operationId: postInvoiceCollection
      summary: 'Creates a Invoice resource.'
      responses:
        201:
          description: 'Invoice resource created'
          content:
            application/health+json:
              schema:
                $ref: '#/components/schemas/ExampleEntity-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ExampleEntity-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Invoice-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Invoice:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Invoice-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Invoice-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Invoice-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Invoice-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Invoice-read'
          links:
            GetInvoiceItem:
              parameters:
                id: '$response.body#/id'
              operationId: getInvoiceItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /invoices/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/health+json:
            schema:
              $ref: '#/components/schemas/ExampleEntity-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ExampleEntity-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Invoice-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Invoice:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Invoice-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Invoice-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Invoice-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Invoice-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Invoice-write'
        description: 'The new Invoice resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/invoices/{id}':
    get:
      tags:
        - Invoice
      operationId: getInvoiceItem
      summary: 'Retrieves a Invoice resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Invoice resource response'
          content:
            application/health+json:
              schema:
                $ref: '#/components/schemas/ExampleEntity-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ExampleEntity-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Invoice-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Invoice:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Invoice-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Invoice-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Invoice-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Invoice-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Invoice-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Invoice
      operationId: deleteInvoiceItem
      summary: 'Removes the Invoice resource.'
      responses:
        204:
          description: 'Invoice resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Invoice
      operationId: putInvoiceItem
      summary: 'Replaces the Invoice resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Invoice resource updated'
          content:
            application/health+json:
              schema:
                $ref: '#/components/schemas/ExampleEntity-read'
            application/json+health:
              schema:
                $ref: '#/components/schemas/ExampleEntity-read'
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Invoice-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Invoice:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Invoice-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Invoice-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Invoice-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Invoice-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Invoice-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/health+json:
            schema:
              $ref: '#/components/schemas/ExampleEntity-write'
          application/json+health:
            schema:
              $ref: '#/components/schemas/ExampleEntity-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Invoice-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Invoice:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Invoice-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Invoice-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Invoice-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Invoice-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Invoice-write'
        description: 'The updated Invoice resource'
    patch:
      tags:
        - Invoice
      operationId: patchInvoiceItem
      summary: 'Updates the Invoice resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Invoice resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Invoice-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Invoice:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Invoice-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Invoice-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Invoice-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Invoice-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Invoice-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Invoice-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Invoice:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Invoice-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Invoice-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Invoice-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Invoice-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Invoice-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Invoice-write'
        description: 'The updated Invoice resource'
  /order:
    post:
      tags:
        - Invoice
      operationId: post_orderInvoiceCollection
      summary: 'Creates a Invoice resource.'
      responses:
        201:
          description: 'Invoice resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Invoice-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Invoice:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Invoice-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Invoice-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Invoice-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Invoice-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Invoice-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Invoice-read'
          links:
            GetInvoiceItem:
              parameters:
                id: '$response.body#/id'
              operationId: getInvoiceItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /invoices/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Invoice-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Invoice:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Invoice-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Invoice-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Invoice-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Invoice-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Invoice-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Invoice-write'
        description: 'The new Invoice resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  /organizations:
    get:
      tags:
        - Organization
      operationId: getOrganizationCollection
      summary: 'Retrieves the collection of Organization resources.'
      responses:
        200:
          description: 'Organization collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Organization:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Organization
      operationId: postOrganizationCollection
      summary: 'Creates a Organization resource.'
      responses:
        201:
          description: 'Organization resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
          links:
            GetOrganizationItem:
              parameters:
                id: '$response.body#/id'
              operationId: getOrganizationItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /organizations/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Organization:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Organization-write'
        description: 'The new Organization resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/organizations/{id}':
    get:
      tags:
        - Organization
      operationId: getOrganizationItem
      summary: 'Retrieves a Organization resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Organization resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Organization
      operationId: deleteOrganizationItem
      summary: 'Removes the Organization resource.'
      responses:
        204:
          description: 'Organization resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Organization
      operationId: putOrganizationItem
      summary: 'Replaces the Organization resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Organization resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Organization:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Organization-write'
        description: 'The updated Organization resource'
    patch:
      tags:
        - Organization
      operationId: patchOrganizationItem
      summary: 'Updates the Organization resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Organization resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Organization:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Organization-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Organization-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Organization:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Organization-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Organization-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Organization-write'
        description: 'The updated Organization resource'
  /payments:
    get:
      tags:
        - Payment
      operationId: getPaymentCollection
      summary: 'Retrieves the collection of Payment resources.'
      responses:
        200:
          description: 'Payment collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Payment:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Payment-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Payment
      operationId: postPaymentCollection
      summary: 'Creates a Payment resource.'
      responses:
        201:
          description: 'Payment resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Payment-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Payment:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Payment-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Payment-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Payment-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Payment-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Payment-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Payment-read'
          links:
            GetPaymentItem:
              parameters:
                id: '$response.body#/id'
              operationId: getPaymentItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /payments/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Payment-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Payment:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Payment-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Payment-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Payment-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Payment-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Payment-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Payment-write'
        description: 'The new Payment resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  /payments/mollie_webhook:
    post:
      tags:
        - Payment
      operationId: post_webhookPaymentCollection
      summary: 'Creates a Payment resource.'
      responses:
        201:
          description: 'Payment resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Payment-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Payment:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Payment-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Payment-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Payment-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Payment-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Payment-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Payment-read'
          links:
            GetPaymentItem:
              parameters:
                id: '$response.body#/id'
              operationId: getPaymentItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /payments/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Payment-write'
        description: 'The new Payment resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/payments/{id}':
    get:
      tags:
        - Payment
      operationId: getPaymentItem
      summary: 'Retrieves a Payment resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Payment resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Payment-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Payment:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Payment-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Payment-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Payment-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Payment-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Payment-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Payment-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Payment
      operationId: deletePaymentItem
      summary: 'Removes the Payment resource.'
      responses:
        204:
          description: 'Payment resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Payment
      operationId: putPaymentItem
      summary: 'Replaces the Payment resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Payment resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Payment-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Payment:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Payment-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Payment-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Payment-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Payment-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Payment-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Payment-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Payment-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Payment:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Payment-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Payment-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Payment-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Payment-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Payment-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Payment-write'
        description: 'The updated Payment resource'
    patch:
      tags:
        - Payment
      operationId: patchPaymentItem
      summary: 'Updates the Payment resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Payment resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Payment-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Payment:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Payment-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Payment-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Payment-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Payment-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Payment-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Payment-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Payment-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Payment-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Payment:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Payment-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Payment-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Payment-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Payment-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Payment-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Payment-write'
        description: 'The updated Payment resource'
  /services:
    get:
      tags:
        - Service
      operationId: getServiceCollection
      summary: 'Retrieves the collection of Service resources.'
      responses:
        200:
          description: 'Service collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Service:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Service-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Service
      operationId: postServiceCollection
      summary: 'Creates a Service resource.'
      responses:
        201:
          description: 'Service resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Service:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Service-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Service-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Service-read'
          links:
            GetServiceItem:
              parameters:
                id: '$response.body#/id'
              operationId: getServiceItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /services/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Service:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Service-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Service-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Service-write'
        description: 'The new Service resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/services/{id}':
    get:
      tags:
        - Service
      operationId: getServiceItem
      summary: 'Retrieves a Service resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Service resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Service:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Service-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Service-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Service-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Service
      operationId: deleteServiceItem
      summary: 'Removes the Service resource.'
      responses:
        204:
          description: 'Service resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Service
      operationId: putServiceItem
      summary: 'Replaces the Service resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Service resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Service:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Service-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Service-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Service-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Service:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Service-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Service-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Service-write'
        description: 'The updated Service resource'
    patch:
      tags:
        - Service
      operationId: patchServiceItem
      summary: 'Updates the Service resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Service resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Service:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Service-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Service-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Service-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Service-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Service:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Service-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Service-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Service-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Service-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Service-write'
        description: 'The updated Service resource'
  /taxes:
    get:
      tags:
        - Tax
      operationId: getTaxCollection
      summary: 'Retrieves the collection of Tax resources.'
      responses:
        200:
          description: 'Tax collection response'
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tax-read'
            application/ld+json:
              schema:
                type: object
                properties:
                  'hydra:member': { type: array, items: { $ref: '#/components/schemas/Tax:jsonld-read' } }
                  'hydra:totalItems': { type: integer, minimum: 0 }
                  'hydra:view': { type: object, properties: { '@id': { type: string, format: iri-reference }, '@type': { type: string }, 'hydra:first': { type: string, format: iri-reference }, 'hydra:last': { type: string, format: iri-reference }, 'hydra:next': { type: string, format: iri-reference } } }
                  'hydra:search': { type: object, properties: { '@type': { type: string }, 'hydra:template': { type: string }, 'hydra:variableRepresentation': { type: string }, 'hydra:mapping': { type: array, items: { type: object, properties: { '@type': { type: string }, variable: { type: string }, property: { type: string }, required: { type: boolean } } } } } }
                required:
                  - 'hydra:member'
            application/vnd.api+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tax-read'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tax-read'
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tax-read'
            application/x-yaml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tax-read'
            text/csv:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tax-read'
            text/html:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Tax-read'
      parameters:
        -
          name: page
          in: query
          required: false
          description: 'The collection page number'
          schema:
            type: integer
            default: 1
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      produces:
        - application/health+json
    post:
      tags:
        - Tax
      operationId: postTaxCollection
      summary: 'Creates a Tax resource.'
      responses:
        201:
          description: 'Tax resource created'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Tax:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Tax-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Tax-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Tax-read'
          links:
            GetTaxItem:
              parameters:
                id: '$response.body#/id'
              operationId: getTaxItem
              description: 'The `id` value returned in the response can be used as the `id` parameter in `GET /taxes/{id}`.'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Tax:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Tax-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Tax-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Tax-write'
        description: 'The new Tax resource'
      parameters:
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
  '/taxes/{id}':
    get:
      tags:
        - Tax
      operationId: getTaxItem
      summary: 'Retrieves a Tax resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
        -
          name: Link
          description: 'A [websub](https://www.w3.org/TR/websub/#discovery) header like <https://hub.example.com/>; rel="hub"'
          in: header
        -
          name: 'extend[]'
          required: false
          description: 'An array of nested objects to include in the return object'
          in: query
          schema:
            type: array
        -
          name: 'fields[]'
          required: false
          description: 'An array of fields to return in output, wil return all fields is not supplied'
          in: query
          schema:
            type: array
        -
          name: validOn
          required: false
          description: 'Returns object as valid on a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validFrom
          required: false
          description: 'Returns objects valid from a given date time'
          schema:
            type: string
            format: date-time
          in: query
        -
          name: validUntil
          required: false
          description: 'Returns objects valid until a given date time'
          schema:
            type: string
            format: date-time
          in: query
      responses:
        200:
          description: 'Tax resource response'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Tax:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Tax-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Tax-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Tax-read'
        404:
          description: 'Resource not found'
      produces:
        - application/health+json
    delete:
      tags:
        - Tax
      operationId: deleteTaxItem
      summary: 'Removes the Tax resource.'
      responses:
        204:
          description: 'Tax resource deleted'
        404:
          description: 'Resource not found'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
    put:
      tags:
        - Tax
      operationId: putTaxItem
      summary: 'Replaces the Tax resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Tax resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Tax:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Tax-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Tax-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Tax-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Tax:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/json:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/x-yaml:
            schema:
              $ref: '#/components/schemas/Tax-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Tax-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Tax-write'
        description: 'The updated Tax resource'
    patch:
      tags:
        - Tax
      operationId: patchTaxItem
      summary: 'Updates the Tax resource.'
      parameters:
        -
          name: id
          in: path
          required: true
          schema:
            type: string
        -
          name: Authorization
          description: 'The JWT of the entity performing the request'
          in: header
        -
          name: API-Version
          description: 'The version of the API conform [Landelijke API-strategie.](https://geonovum.github.io/KP-APIs/#versioning)'
          example: 1.0.1
          in: header
        -
          name: X-NLX-Logrecord-ID
          description: 'A  globally unique id of the request, which makes a request traceable throughout the network.'
          in: header
        -
          name: X-NLX-Request-Process-Id
          description: 'A process id for purpose registration (doelbinding)'
          in: header
        -
          name: X-NLX-Request-Data-Elements
          description: 'A list of requested data elements'
          in: header
        -
          name: X-NLX-Request-Data-Subject
          description: 'A key-value list of data subjects related to this request. e.g. `bsn=12345678, kenteken=ab-12-fg`'
          in: header
        -
          name: X-NLX-Audit-Clarification
          description: 'A clarification as to why a request has been made  (doelbinding)'
          in: header
      responses:
        200:
          description: 'Tax resource updated'
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/ld+json:
              schema:
                $ref: '#/components/schemas/Tax:jsonld-read'
            application/vnd.api+json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/json:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/xml:
              schema:
                $ref: '#/components/schemas/Tax-read'
            application/x-yaml:
              schema:
                $ref: '#/components/schemas/Tax-read'
            text/csv:
              schema:
                $ref: '#/components/schemas/Tax-read'
            text/html:
              schema:
                $ref: '#/components/schemas/Tax-read'
        400:
          description: 'Invalid input'
        404:
          description: 'Resource not found'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/hal+json:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/ld+json:
            schema:
              $ref: '#/components/schemas/Tax:jsonld-write'
          application/vnd.api+json:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/Tax-write'
          application/xml:
            schema:
              $ref: '#/components/schemas/Tax-write'
          applications/x-yaml:
            schema:
              $ref: '#/components/schemas/Tax-write'
          text/csv:
            schema:
              $ref: '#/components/schemas/Tax-write'
          text/html:
            schema:
              $ref: '#/components/schemas/Tax-write'
        description: 'The updated Tax resource'
components:
  schemas:
    Invoice-read:
      type: object
      description: 'An entity representing an invoice.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of the invoice'
          type: string
        description:
          description: 'The description of the invoice'
          type: string
        reference:
          readOnly: true
          description: 'The human readable reference for this request, build as {gemeentecode}-{year}-{referenceId}. Where gemeentecode is a four digit number for gemeenten and a four letter abriviation for other organizations'
          type: string
        targetOrganization:
          description: 'The RSIN of the organization that ownes this proces'
          type: string
        items:
          description: 'The items in this invoice'
          type: array
          items:
            $ref: '#/components/schemas/InvoiceItem-read'
        price:
          description: 'The price of this product'
          type: string
        priceCurrency:
          description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        taxes:
          readOnly: true
          description: 'A list of total taxes'
          type: array
          items:
            type: string
        dateCreated:
          readOnly: true
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
        order:
          description: 'The order of this invoice'
          type: string
        payments:
          description: 'The payments of this Invoice'
          type: array
          items:
            $ref: '#/components/schemas/Payment-read'
        customer:
          description: 'The customer that receives this invoice'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        paymentUrl:
          readOnly: true
          type: string
        remark:
          description: 'Remarks on this invoice'
          type: string
        paid:
          readOnly: true
          type: boolean
      required:
        - name
        - targetOrganization
        - price
        - customer
    Invoice-write:
      type: object
      description: 'An entity representing an invoice.'
      required:
        - name
        - targetOrganization
        - price
        - customer
      properties:
        name:
          description: 'The name of the invoice'
          type: string
        description:
          description: 'The description of the invoice'
          type: string
        targetOrganization:
          description: 'The RSIN of the organization that ownes this proces'
          type: string
        items:
          description: 'The items in this invoice'
          type: array
          items:
            $ref: '#/components/schemas/InvoiceItem-write'
        price:
          description: 'The price of this product'
          type: string
        priceCurrency:
          description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        order:
          description: 'The order of this invoice'
          type: string
        payments:
          description: 'The payments of this Invoice'
          type: array
          items:
            $ref: '#/components/schemas/Payment-write'
        customer:
          description: 'The customer that receives this invoice'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        remark:
          description: 'Remarks on this invoice'
          type: string
    'Invoice:jsonld-read':
      type: object
      description: 'An entity representing an invoice.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of the invoice'
          type: string
        description:
          description: 'The description of the invoice'
          type: string
        reference:
          readOnly: true
          description: 'The human readable reference for this request, build as {gemeentecode}-{year}-{referenceId}. Where gemeentecode is a four digit number for gemeenten and a four letter abriviation for other organizations'
          type: string
        targetOrganization:
          description: 'The RSIN of the organization that ownes this proces'
          type: string
        items:
          description: 'The items in this invoice'
          type: array
          items:
            $ref: '#/components/schemas/InvoiceItem:jsonld-read'
        price:
          description: 'The price of this product'
          type: string
        priceCurrency:
          description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        taxes:
          readOnly: true
          description: 'A list of total taxes'
          type: array
          items:
            type: string
        dateCreated:
          readOnly: true
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
        order:
          description: 'The order of this invoice'
          type: string
        payments:
          description: 'The payments of this Invoice'
          type: array
          items:
            $ref: '#/components/schemas/Payment:jsonld-read'
        customer:
          description: 'The customer that receives this invoice'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        paymentUrl:
          readOnly: true
          type: string
        remark:
          description: 'Remarks on this invoice'
          type: string
        paid:
          readOnly: true
          type: boolean
      required:
        - name
        - targetOrganization
        - price
        - customer
    'Invoice:jsonld-write':
      type: object
      description: 'An entity representing an invoice.'
      required:
        - name
        - targetOrganization
        - price
        - customer
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of the invoice'
          type: string
        description:
          description: 'The description of the invoice'
          type: string
        targetOrganization:
          description: 'The RSIN of the organization that ownes this proces'
          type: string
        items:
          description: 'The items in this invoice'
          type: array
          items:
            $ref: '#/components/schemas/InvoiceItem:jsonld-write'
        price:
          description: 'The price of this product'
          type: string
        priceCurrency:
          description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        order:
          description: 'The order of this invoice'
          type: string
        payments:
          description: 'The payments of this Invoice'
          type: array
          items:
            $ref: '#/components/schemas/Payment:jsonld-write'
        customer:
          description: 'The customer that receives this invoice'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        remark:
          description: 'Remarks on this invoice'
          type: string
    InvoiceItem-read:
      type: object
      description: 'An entity representing an item of an invoice.'
      properties:
        id:
          readOnly: true
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of the object'
          type: string
        description:
          description: 'The description of the InvoiceItem'
          type: string
        invoice:
          description: 'The invoice that contains this item'
          $ref: '#/components/schemas/Invoice-read'
        offer:
          description: 'The offer this item represents'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        product:
          description: 'The product this item represents. DEPRECATED: REPLACED BY OFFER'
          type: string
        quantity:
          description: 'The quantity of the items that are ordered'
          type: integer
        price:
          description: 'The price of this product'
          type: string
        priceCurrency:
          description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        taxes:
          description: 'The taxes that affect this offer'
          type: array
          items:
            $ref: '#/components/schemas/Tax-read'
        dateCreated:
          readOnly: true
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
      required:
        - name
        - invoice
        - offer
        - quantity
        - price
    InvoiceItem-write:
      type: object
      description: 'An entity representing an item of an invoice.'
      required:
        - name
        - invoice
        - offer
        - quantity
        - price
      properties:
        name:
          description: 'The name of the object'
          type: string
        description:
          description: 'The description of the InvoiceItem'
          type: string
        invoice:
          description: 'The invoice that contains this item'
          $ref: '#/components/schemas/Invoice-write'
        offer:
          description: 'The offer this item represents'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        product:
          description: 'The product this item represents. DEPRECATED: REPLACED BY OFFER'
          type: string
        quantity:
          description: 'The quantity of the items that are ordered'
          type: integer
        price:
          description: 'The price of this product'
          type: string
        priceCurrency:
          description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        taxes:
          description: 'The taxes that affect this offer'
          type: array
          items:
            $ref: '#/components/schemas/Tax-write'
    'InvoiceItem:jsonld-read':
      type: object
      description: 'An entity representing an item of an invoice.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of the object'
          type: string
        description:
          description: 'The description of the InvoiceItem'
          type: string
        invoice:
          description: 'The invoice that contains this item'
          $ref: '#/components/schemas/Invoice:jsonld-read'
        offer:
          description: 'The offer this item represents'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        product:
          description: 'The product this item represents. DEPRECATED: REPLACED BY OFFER'
          type: string
        quantity:
          description: 'The quantity of the items that are ordered'
          type: integer
        price:
          description: 'The price of this product'
          type: string
        priceCurrency:
          description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        taxes:
          description: 'The taxes that affect this offer'
          type: array
          items:
            $ref: '#/components/schemas/Tax:jsonld-read'
        dateCreated:
          readOnly: true
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request was created by the submitter'
          type: string
          format: date-time
      required:
        - name
        - invoice
        - offer
        - quantity
        - price
    'InvoiceItem:jsonld-write':
      type: object
      description: 'An entity representing an item of an invoice.'
      required:
        - name
        - invoice
        - offer
        - quantity
        - price
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of the object'
          type: string
        description:
          description: 'The description of the InvoiceItem'
          type: string
        invoice:
          description: 'The invoice that contains this item'
          $ref: '#/components/schemas/Invoice:jsonld-write'
        offer:
          description: 'The offer this item represents'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
        product:
          description: 'The product this item represents. DEPRECATED: REPLACED BY OFFER'
          type: string
        quantity:
          description: 'The quantity of the items that are ordered'
          type: integer
        price:
          description: 'The price of this product'
          type: string
        priceCurrency:
          description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        taxes:
          description: 'The taxes that affect this offer'
          type: array
          items:
            $ref: '#/components/schemas/Tax:jsonld-write'
    Organization-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        shortCode:
          type: string
        rsin:
          type: string
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
        services:
          description: 'The payment providers configured for this organization'
          type: array
          items:
            $ref: '#/components/schemas/Service-read'
        redirectUrl:
          description: 'The url payment providers should return to'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
      required:
        - shortCode
        - rsin
        - redirectUrl
    Organization-write:
      type: object
      description: ''
      required:
        - shortCode
        - rsin
        - redirectUrl
      properties:
        shortCode:
          type: string
        rsin:
          type: string
        services:
          description: 'The payment providers configured for this organization'
          type: array
          items:
            $ref: '#/components/schemas/Service-write'
        redirectUrl:
          description: 'The url payment providers should return to'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
    'Organization:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        shortCode:
          type: string
        rsin:
          type: string
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
        services:
          description: 'The payment providers configured for this organization'
          type: array
          items:
            $ref: '#/components/schemas/Service:jsonld-read'
        redirectUrl:
          description: 'The url payment providers should return to'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
      required:
        - shortCode
        - rsin
        - redirectUrl
    'Organization:jsonld-write':
      type: object
      description: ''
      required:
        - shortCode
        - rsin
        - redirectUrl
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        shortCode:
          type: string
        rsin:
          type: string
        services:
          description: 'The payment providers configured for this organization'
          type: array
          items:
            $ref: '#/components/schemas/Service:jsonld-write'
        redirectUrl:
          description: 'The url payment providers should return to'
          externalDocs:
            url: 'http://schema.org/url'
          type: string
    Payment-read:
      type: object
      description: 'An entity representing a payment.'
      properties:
        id:
          readOnly: true
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        paymentProvider:
          description: 'The provider that handles the payment'
          $ref: '#/components/schemas/Service-read'
        paymentId:
          description: 'The payment id of this payment'
          type: string
        status:
          description: 'The status of this payment'
          type: string
        invoice:
          description: 'The invoice this payment relates to'
          $ref: '#/components/schemas/Invoice-read'
      required:
        - paymentProvider
        - paymentId
        - status
    Payment-write:
      type: object
      description: 'An entity representing a payment.'
      required:
        - paymentProvider
        - paymentId
        - status
      properties:
        paymentProvider:
          description: 'The provider that handles the payment'
          $ref: '#/components/schemas/Service-write'
        paymentId:
          description: 'The payment id of this payment'
          type: string
        status:
          description: 'The status of this payment'
          type: string
        invoice:
          description: 'The invoice this payment relates to'
          $ref: '#/components/schemas/Invoice-write'
    'Payment:jsonld-read':
      type: object
      description: 'An entity representing a payment.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        paymentProvider:
          description: 'The provider that handles the payment'
          $ref: '#/components/schemas/Service:jsonld-read'
        paymentId:
          description: 'The payment id of this payment'
          type: string
        status:
          description: 'The status of this payment'
          type: string
        invoice:
          description: 'The invoice this payment relates to'
          $ref: '#/components/schemas/Invoice:jsonld-read'
      required:
        - paymentProvider
        - paymentId
        - status
    'Payment:jsonld-write':
      type: object
      description: 'An entity representing a payment.'
      required:
        - paymentProvider
        - paymentId
        - status
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        paymentProvider:
          description: 'The provider that handles the payment'
          $ref: '#/components/schemas/Service:jsonld-write'
        paymentId:
          description: 'The payment id of this payment'
          type: string
        status:
          description: 'The status of this payment'
          type: string
        invoice:
          description: 'The invoice this payment relates to'
          $ref: '#/components/schemas/Invoice:jsonld-write'
    Service-read:
      type: object
      description: ''
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        type:
          description: 'The status of this payment'
          type: string
        organization:
          description: 'The organization this payment provider is linked to'
          $ref: '#/components/schemas/Organization-read'
        configuration:
          description: 'Configuration options for this payment provider'
          type: array
          items:
            type: string
      required:
        - type
    Service-write:
      type: object
      description: ''
      required:
        - type
      properties:
        type:
          description: 'The status of this payment'
          type: string
        organization:
          description: 'The organization this payment provider is linked to'
          $ref: '#/components/schemas/Organization-write'
        authorization:
          writeOnly: true
          description: 'The API key for this payment provider'
          type: string
        configuration:
          description: 'Configuration options for this payment provider'
          type: array
          items:
            type: string
    'Service:jsonld-read':
      type: object
      description: ''
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        type:
          description: 'The status of this payment'
          type: string
        organization:
          description: 'The organization this payment provider is linked to'
          $ref: '#/components/schemas/Organization:jsonld-read'
        configuration:
          description: 'Configuration options for this payment provider'
          type: array
          items:
            type: string
      required:
        - type
    'Service:jsonld-write':
      type: object
      description: ''
      required:
        - type
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        type:
          description: 'The status of this payment'
          type: string
        organization:
          description: 'The organization this payment provider is linked to'
          $ref: '#/components/schemas/Organization:jsonld-write'
        authorization:
          writeOnly: true
          description: 'The API key for this payment provider'
          type: string
        configuration:
          description: 'Configuration options for this payment provider'
          type: array
          items:
            type: string
    Tax-read:
      type: object
      description: 'An entity representing an tax.'
      properties:
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this tax'
          type: string
        description:
          description: 'An short description of this tax'
          type: string
        price:
          description: 'The price of this tax'
          type: string
        priceCurrency:
          description: 'The currency of this tax in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        percentage:
          description: 'The tax percentage for this offer as an integer e.g. 9% makes 9'
          type: integer
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
      required:
        - name
        - price
        - percentage
    Tax-write:
      type: object
      description: 'An entity representing an tax.'
      required:
        - name
        - price
        - percentage
      properties:
        name:
          description: 'The name of this tax'
          type: string
        description:
          description: 'An short description of this tax'
          type: string
        price:
          description: 'The price of this tax'
          type: string
        priceCurrency:
          description: 'The currency of this tax in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        percentage:
          description: 'The tax percentage for this offer as an integer e.g. 9% makes 9'
          type: integer
    'Tax:jsonld-read':
      type: object
      description: 'An entity representing an tax.'
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        id:
          readOnly: true
          description: 'The UUID identifier of this object'
          externalDocs:
            url: 'http://schema.org/identifier'
          type: string
        name:
          description: 'The name of this tax'
          type: string
        description:
          description: 'An short description of this tax'
          type: string
        price:
          description: 'The price of this tax'
          type: string
        priceCurrency:
          description: 'The currency of this tax in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        percentage:
          description: 'The tax percentage for this offer as an integer e.g. 9% makes 9'
          type: integer
        dateCreated:
          readOnly: true
          description: 'The moment this request was created'
          type: string
          format: date-time
        dateModified:
          readOnly: true
          description: 'The moment this request last Modified'
          type: string
          format: date-time
      required:
        - name
        - price
        - percentage
    'Tax:jsonld-write':
      type: object
      description: 'An entity representing an tax.'
      required:
        - name
        - price
        - percentage
      properties:
        '@context':
          readOnly: true
          type: string
        '@id':
          readOnly: true
          type: string
        '@type':
          readOnly: true
          type: string
        name:
          description: 'The name of this tax'
          type: string
        description:
          description: 'An short description of this tax'
          type: string
        price:
          description: 'The price of this tax'
          type: string
        priceCurrency:
          description: 'The currency of this tax in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
          externalDocs:
            url: 'http://schema.org/priceCurrency'
          type: string
        percentage:
          description: 'The tax percentage for this offer as an integer e.g. 9% makes 9'
          type: integer
definitions:
  Invoice-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of the invoice'
        type: string
        example: 'My Invoice'
        maxLength: 255
      description:
        description: 'The description of the invoice'
        type: string
        example: 'This is the best invoice ever'
        maxLength: 255
      reference:
        description: 'The human readable reference for this request, build as {gemeentecode}-{year}-{referenceId}. Where gemeentecode is a four digit number for gemeenten and a four letter abriviation for other organizations'
        type: string
        example: 6666-2019-0000000012
        maxLength: 255
      targetOrganization:
        description: 'The RSIN of the organization that ownes this proces'
        type: string
        example: '002851234'
        maxLength: 255
      price:
        description: 'The price of this product'
        type: string
        example: '50.00'
      priceCurrency:
        description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
        type: string
        example: EUR
      taxes:
        description: 'A list of total taxes'
        type: array
        example: EUR
      dateCreated:
        description: 'The moment this request was created by the submitter'
        type: \DateTime
        example: '20190101'
      dateModified:
        description: 'The moment this request was created by the submitter'
        type: \DateTime
        example: '20190101'
      order:
        description: 'The order of this invoice'
        type: string
        example: 'https://www.example.org/order/1'
        maxLength: 255
      customer:
        description: 'The customer that receives this invoice'
        type: string
        example: 'https://example.org/people/1'
        format: url
      paymentUrl: []
      remark:
        description: 'Remarks on this invoice'
        type: string
      items:
        description: 'The items in this invoice'
        type: \ArrayCollection
      payments:
        description: 'The payments of this Invoice'
        type: \Payment
    required:
      - name
      - targetOrganization
      - price
      - customer
  Invoice-write:
    properties:
      name:
        description: 'The name of the invoice'
        type: string
        example: 'My Invoice'
        maxLength: 255
      description:
        description: 'The description of the invoice'
        type: string
        example: 'This is the best invoice ever'
        maxLength: 255
      targetOrganization:
        description: 'The RSIN of the organization that ownes this proces'
        type: string
        example: '002851234'
        maxLength: 255
      price:
        description: 'The price of this product'
        type: string
        example: '50.00'
      priceCurrency:
        description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
        type: string
        example: EUR
      order:
        description: 'The order of this invoice'
        type: string
        example: 'https://www.example.org/order/1'
        maxLength: 255
      customer:
        description: 'The customer that receives this invoice'
        type: string
        example: 'https://example.org/people/1'
        format: url
      remark:
        description: 'Remarks on this invoice'
        type: string
      items:
        description: 'The items in this invoice'
        type: \ArrayCollection
      payments:
        description: 'The payments of this Invoice'
        type: \Payment
    required:
      - name
      - targetOrganization
      - price
      - customer
  InvoiceItem-read:
    properties:
      id:
        description: ''
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of the object'
        type: string
        example: 'My InvoiceItem'
        maxLength: 255
      description:
        description: 'The description of the InvoiceItem'
        type: string
        example: 'This is the best invoice item ever'
        maxLength: 255
      offer:
        description: 'The offer this item represents'
        type: string
        example: 'http://example.org/offers/1'
        format: url
      product:
        description: 'The product this item represents. DEPRECATED: REPLACED BY OFFER'
        type: string
        maxLength: 255
      quantity:
        description: 'The quantity of the items that are ordered'
        type: int
        example: '1'
      price:
        description: 'The price of this product'
        type: string
        example: '50.00'
      priceCurrency:
        description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
        type: string
        example: EUR
      dateCreated:
        description: 'The moment this request was created by the submitter'
        type: \DateTime
      dateModified:
        description: 'The moment this request was created by the submitter'
        type: \DateTime
      invoice:
        description: 'The invoice that contains this item'
        type: \Invoice
      taxes:
        description: 'The taxes that affect this offer'
        type: \ArrayCollection
    required:
      - name
      - offer
      - price
      - invoice
  InvoiceItem-write:
    properties:
      name:
        description: 'The name of the object'
        type: string
        example: 'My InvoiceItem'
        maxLength: 255
      description:
        description: 'The description of the InvoiceItem'
        type: string
        example: 'This is the best invoice item ever'
        maxLength: 255
      offer:
        description: 'The offer this item represents'
        type: string
        example: 'http://example.org/offers/1'
        format: url
      product:
        description: 'The product this item represents. DEPRECATED: REPLACED BY OFFER'
        type: string
        maxLength: 255
      quantity:
        description: 'The quantity of the items that are ordered'
        type: int
        example: '1'
      price:
        description: 'The price of this product'
        type: string
        example: '50.00'
      priceCurrency:
        description: 'The currency of this product in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
        type: string
        example: EUR
      invoice:
        description: 'The invoice that contains this item'
        type: \Invoice
      taxes:
        description: 'The taxes that affect this offer'
        type: \ArrayCollection
    required:
      - name
      - offer
      - price
      - invoice
  Organization-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      shortCode:
        maxLength: 4
      rsin:
        maxLength: 16
        minLength: 4
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
      redirectUrl:
        description: 'The url payment providers should return to'
        type: string
        format: url
      services:
        description: 'The payment providers configured for this organization'
        type: \ArrayCollection
    required:
      - shortCode
      - rsin
      - redirectUrl
  Organization-write:
    properties:
      shortCode:
        maxLength: 4
      rsin:
        maxLength: 16
        minLength: 4
      redirectUrl:
        description: 'The url payment providers should return to'
        type: string
        format: url
      services:
        description: 'The payment providers configured for this organization'
        type: \ArrayCollection
    required:
      - shortCode
      - rsin
      - redirectUrl
  Payment-read:
    properties:
      id:
        description: ''
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      paymentId:
        description: 'The payment id of this payment'
        type: string
        example: 87782426a21cbd70fc9823cbe1e024fb25804c833743b41529a23ae94b3b1cc2
        maxLength: 255
      status:
        description: 'The status of this payment'
        type: string
        example: open
        maxLength: 255
      paymentProvider:
        description: 'The provider that handles the payment'
        type: \Service
      invoice:
        description: 'The invoice this payment relates to'
        type: \Invoice
    required:
      - paymentId
      - status
      - paymentProvider
  Payment-write:
    properties:
      paymentId:
        description: 'The payment id of this payment'
        type: string
        example: 87782426a21cbd70fc9823cbe1e024fb25804c833743b41529a23ae94b3b1cc2
        maxLength: 255
      status:
        description: 'The status of this payment'
        type: string
        example: open
        maxLength: 255
      paymentProvider:
        description: 'The provider that handles the payment'
        type: \Service
      invoice:
        description: 'The invoice this payment relates to'
        type: \Invoice
    required:
      - paymentId
      - status
      - paymentProvider
  Service-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      type:
        description: 'The status of this payment'
        type: string
        example: open
        maxLength: 255
      configuration:
        description: 'Configuration options for this payment provider'
        type: array
      organization:
        description: 'The organization this payment provider is linked to'
        type: \Organization
    required:
      - type
  Service-write:
    properties:
      type:
        description: 'The status of this payment'
        type: string
        example: open
        maxLength: 255
      authorization:
        description: 'The API key for this payment provider'
        type: string
      configuration:
        description: 'Configuration options for this payment provider'
        type: array
      organization:
        description: 'The organization this payment provider is linked to'
        type: \Organization
    required:
      - type
  Tax-read:
    properties:
      id:
        description: 'The UUID identifier of this object'
        type: string
        example: e2984465-190a-4562-829e-a8cca81aa35d
        format: uuid
      name:
        description: 'The name of this tax'
        type: string
        example: 'my offer'
        maxLength: 255
      description:
        description: 'An short description of this tax'
        type: string
        example: 'This is the best product ever'
        maxLength: 2550
      price:
        description: 'The price of this tax'
        type: string
        example: '50.00'
      priceCurrency:
        description: 'The currency of this tax in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
        type: string
        example: EUR
      percentage:
        description: 'The tax percentage for this offer as an integer e.g. 9% makes 9'
        type: int
        example: '9'
      dateCreated:
        description: 'The moment this request was created'
        type: \Datetime
      dateModified:
        description: 'The moment this request last Modified'
        type: \Datetime
      invoiceItems:
        description: 'The offers that use this tax'
        type: \ArrayCollection
    required:
      - name
      - price
  Tax-write:
    properties:
      name:
        description: 'The name of this tax'
        type: string
        example: 'my offer'
        maxLength: 255
      description:
        description: 'An short description of this tax'
        type: string
        example: 'This is the best product ever'
        maxLength: 2550
      price:
        description: 'The price of this tax'
        type: string
        example: '50.00'
      priceCurrency:
        description: 'The currency of this tax in an [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) format'
        type: string
        example: EUR
      percentage:
        description: 'The tax percentage for this offer as an integer e.g. 9% makes 9'
        type: int
        example: '9'
      invoiceItems:
        description: 'The offers that use this tax'
        type: \ArrayCollection
    required:
      - name
      - price
tags:
  -
    name: Invoice
    description: |
      An entity representing an invoice.
      
      This entity represents an invoice for sales
  -
    name: InvoiceItem
    description: |
      An entity representing an item of an invoice.
      
      This entity represents an item that is placed on the invoice
  -
    name: Organization
    description: |
      
      
      
  -
    name: Payment
    description: |
      An entity representing a payment.
      
      This entity represents a payment of an invoice.
  -
    name: Service
    description: |
      
      
      
  -
    name: Tax
    description: |
      An entity representing an tax.
      
      This entity represents an offer that bridges products to the OrderRegistratieComponent to be able to change prices without invalidating past orders.
securityDefinitions:
  JWT-Oauth:
    type: oauth2
    authorizationUrl: 'http://petstore.swagger.io/api/oauth/dialog'
    flow: implicit
    scopes:
      read: 'read right to the Tax resource'
      write: 'write right to the Tax resource'
  JWT-Token:
    type: apiKey
    in: header
    name: Authorization
    scopes:
      read: 'read right to the Tax resource'
      write: 'write right to the Tax resource'
host: irc.zaakonline.nl
servers:
  -
    description: 'Demo Omgeving'
    url: 'http://proto.demo.common-ground.dev'
externalDocs:
  -
    description: 'OAS Documentatie'
    url: 'http://proto.demo.common-ground.dev'
x-commonground:
  type: service
  developers:
    -
      name: Conduction
      url: 'https://github.com/ConductionNL'
      email: info@conduction.nl
    -
      name: 'Gemeente ''s-Hertogenbosch'
      url: 'https://github.com/gemeenteshertogenbosch'
      email: info@s-hertogenbosch.nl/
    -
      name: 'Gemeente Utrecht'
      url: 'https://github.com/GemeenteUtrecht'
      email: info@utrecht.nl
  builds:
    -
      name: travis
      logo: 'https://travis-ci.org/api-platform/core.svg?branch=master'
      url: 'https://travis-ci.org/api-platform/core'
    -
      name: appveyor
      logo: 'https://ci.appveyor.com/api/projects/status/grwuyprts3wdqx5l?svg=true'
      url: 'https://ci.appveyor.com/project/dunglas/dunglasapibundle'
    -
      name: codecov
      logo: 'https://codecov.io/gh/api-platform/core/branch/master/graph/badge.svg'
      url: 'https://codecov.io/gh/api-platform/core'
    -
      name: SensioLabsInsight
      logo: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93/mini.png'
      url: 'https://insight.sensiolabs.com/projects/92d78899-946c-4282-89a3-ac92344f9a93'
    -
      name: 'Scrutinizer Code Quality'
      logo: 'https://scrutinizer-ci.com/g/api-platform/core/badges/quality-score.png?b=master'
      url: 'https://scrutinizer-ci.com/g/api-platform/core/?branch=master'
